data1 <- get(load("../processed_data/sardinia2017-strand-flank.rda"))
clubbed_counts_2 <- club_signature_counts_2(data1, flanking_bases = 1)
dim(clubbed_counts_2)
temp_split
length(temp_split)
c(temp_split[1:(7+2*flanking_bases)], breakbase, temp_split[(11+2*flanking_bases):(length(temp_split))])
source('~/Documents/aRchaic/R/club_signature_counts_2.R')
sig <- "AG->AT_-_C_A_12"
signatureclub2(sig, flanking_bases = 1)
source('~/Documents/aRchaic/R/club_signature_counts_2.R')
data1 <- get(load("../processed_data/sardinia2017-strand-flank.rda"))
clubbed_counts_2 <- club_signature_counts_2(data1, flanking_bases = 1)
dim(clubbed_counts_1)
dim(clubbed_counts_2)
rm(list=ls())
source('~/Documents/aRchaic/R/club_signature_counts_2.R')
data1 <- get(load("../processed_data/sardinia2017-strand-flank.rda"))
clubbed_counts_2 <- club_signature_counts_2(data1, flanking_bases = 1)
data2 <- get(load("../processed_data/1000g-strand-flank-2.rda"))
clubbed_counts_2 <- club_signature_counts(data2, flanking_bases = 1)
source('~/Documents/aRchaic/R/club_signature_counts_2.R')
data1 <- get(load("../processed_data/sardinia2017-strand-flank.rda"))
clubbed_counts_2 <- club_signature_counts_2(data1, flanking_bases = 1)
data2 <- get(load("../processed_data/1000g-strand-flank-2.rda"))
clubbed_counts_2 <- club_signature_counts_2(data2, flanking_bases = 1)
data1 <- get(load("../processed_data/sardinia2017-strand-flank.rda"))
clubbed_counts_1 <- club_signature_counts_2(data1, flanking_bases = 1)
data2 <- get(load("../processed_data/1000g-strand-flank-2.rda"))
clubbed_counts_2 <- club_signature_counts_2(data2, flanking_bases = 1)
dim(clubbed_counts_2)
dim(clubbed_counts_1)
pooled_names <- intersect(colnames(clubbed_counts_1), colnames(clubbed_counts_2))
filtered_sardinia <- clubbed_counts_1[, match(pooled_names, colnames(clubbed_counts_1))]
filtered_moderns <- clubbed_counts_2[, match(pooled_names, colnames(clubbed_counts_2))]
pooled_data <- rbind(filtered_sardinia, filtered_moderns)
dim(pooled_data)
labs <- c(substring(rownames(clubbed_counts_1), 1, 2), rep("moderns", 50))
library(maptpx)
labs
signature_set <- colnames(pooled_data)
signature_set[1:4]
sig_split <- t(sapply(1:length(signature_set), function(x) return(strsplit(signature_set[x], "")[[1]][1:12])))
new_sig_split <- matrix(0, dim(sig_split)[1], 3);
sig_split
sig_split[1,]
new_sig_split[,1] <- sig_split[,1]
new_sig_split[,2] <- sapply(1:length(signature_set), function(x) return(paste(sig_split[x,2:5], collapse="")))
new_sig_split[,3] <- sig_split[,6]
new_sig_split
breakbase <- sig_split[,10]
strand <- sig_split[,8]
new_sig_split <- cbind.data.frame(new_sig_split, breakbase, strand)
new_sig_split
pos <- t(sapply(1:length(signature_set), function(x)
{
y = strsplit(signature_set[x], "")[[1]]
return(paste(y[12:length(y)], collapse=""))
}))
pos
pos[1:5]
signature_set[1:5]
pos <- as.numeric(pos)
pos <- pos - min(pos)
pos <- factor(pos, levels = 0:20)
mat <- matrix(0, dim(new_sig_split)[1], dim(new_sig_split)[2])
for(k in 1:dim(new_sig_split)[2]){
temp <- as.factor(new_sig_split[,k])
mat[,k] <- as.numeric(as.matrix(plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1))))
}
signatures <- mat;
signature_pos <- cbind.data.frame(signatures, t(pos))
signature_pos
dim(signature_pos)
signature_pos[1:5,]
signature_pos[1:5,1:5]
signature_pos[1:5,1:5]
mat[1:5,]
mat[200:300,]
dim(pooled_data)
signature_set <- colnames(pooled_data)
sig_split <- t(sapply(1:length(signature_set), function(x) return(strsplit(signature_set[x], "")[[1]][1:12])))
new_sig_split <- matrix(0, dim(sig_split)[1], 3);
new_sig_split[,1] <- sig_split[,1]
new_sig_split[,2] <- sapply(1:length(signature_set), function(x) return(paste(sig_split[x,2:5], collapse="")))
new_sig_split[,3] <- sig_split[,6]
breakbase <- sig_split[,10]
strand <- sig_split[,8]
new_sig_split <- cbind.data.frame(new_sig_split, breakbase, strand)
pos <- t(sapply(1:length(signature_set), function(x)
{
y = strsplit(signature_set[x], "")[[1]]
return(paste(y[12:length(y)], collapse=""))
}))
pos <- as.numeric(pos)
pos <- pos - min(pos)
pos <- factor(pos, levels = 0:20)
mat <- matrix(0, dim(new_sig_split)[1], dim(new_sig_split)[2])
for(k in 1:dim(new_sig_split)[2]){
temp <- as.factor(new_sig_split[,k])
mat[,k] <- as.numeric(as.matrix(plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1))))
}
signatures <- mat;
signature_pos <- cbind.data.frame(signatures, t(pos))
topic_clus <- maptpx::topics(pooled_data, K=2, tol=100, model="independent", signatures = signature_pos)
omega <- topic_clus$omega
annotation <- data.frame(
sample_id = paste0("X", c(1:NROW(omega))),
tissue_label = factor(labs)
)
StructureGGplot(omega = omega,
annotation = annotation,
palette = cols1,
yaxis_label = "Sardinia",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],""),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
omega <- topic_clus$omega
annotation <- data.frame(
sample_id = paste0("X", c(1:NROW(omega))),
tissue_label = factor(labs)
)
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = cols1,
yaxis_label = "Sardinia",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],""),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
omega <- topic_clus$omega
annotation <- data.frame(
sample_id = paste0("X", c(1:NROW(omega))),
tissue_label = factor(labs)
)
cols1 <- c("red","blue","darkgoldenrod1","cyan","firebrick", "green",
"hotpink","burlywood","yellow","darkgray","deepskyblue","darkkhaki",
"brown4","darkorchid","magenta","yellow", "azure1","azure4")
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = cols1,
yaxis_label = "Sardinia",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],""),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
install_github("kkdey/CountClust")
devtools::install_github("kkdey/CountClust")
library(CountClust)
remove.packages("ggplot2")
library(CountClust)
devtools::install_github("kkdey/CountClust")
devtools::install_github("kkdey/CountClust", force=TRUE)
library(Countclust)
library(CountClust)
source('~/Documents/CountClust/R/StructureGGplot.R')
StructureGGplot(omega = omega,
annotation = annotation,
palette = cols1,
yaxis_label = "Sardinia",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],""),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
topic_clus <- maptpx::topics(pooled_data, K=3, tol=100, model="independent", signatures = signature_pos)
save(topic_clus, file="../processed_data/maptpx-runs/sardinia-26-moderns-50-ind-maptpx-K2.rda")
omega <- topic_clus$omega
annotation <- data.frame(
sample_id = paste0("X", c(1:NROW(omega))),
tissue_label = factor(labs)
)
cols1 <- c("red","blue","darkgoldenrod1","cyan","firebrick", "green",
"hotpink","burlywood","yellow","darkgray","deepskyblue","darkkhaki",
"brown4","darkorchid","magenta","yellow", "azure1","azure4")
StructureGGplot(omega = omega,
annotation = annotation,
palette = cols1,
yaxis_label = "Sardinia",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],""),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
theta_pool <- topic_clus$theta
dim(theta_pool)
theta_pool[1:5,]
signature_set <- rownames(theta_pool)
signature_patterns <- substring(signature_set, 1, 4+2*flanking_bases)
flanking_bases = 1
signature_set <- rownames(theta_pool)
signature_patterns <- substring(signature_set, 1, 4+2*flanking_bases)
library(dplyr)
signature_patterns
theta <- dplyr::tbl_df(data.frame(theta_pool)) %>% dplyr::mutate(sig = signature_patterns) %>% dplyr::group_by(sig) %>% dplyr::summarise_each(funs(sum)) %>% as.data.frame()
theta
rownames(theta) <-  theta[,1]
theta <- theta[,-1]
dim(theta)
colSums(theta)
indices_minus <- grep("_-_", signature_set)
strand_theta <- data.frame("minus" = colSums(theta_pool[indices_minus,]),
"plus" = colSums(theta_pool[-indices_minus,]))
strand_theta
breakbase <- substring(signature_set, 8+2*flanking_bases,  8+2*flanking_bases)
breakbase
theta_break <- dplyr::tbl_df(data.frame(theta_pool)) %>% dplyr::mutate(sig = breakbase) %>% dplyr::group_by(sig) %>% dplyr::summarise_each(funs(sum)) %>% as.data.frame()
theta_break
breakbase <- substring(signature_set, 8+2*flanking_bases,  8+2*flanking_bases)
theta_break <- dplyr::tbl_df(data.frame(theta_pool)) %>% dplyr::mutate(sig = breakbase) %>% dplyr::group_by(sig) %>% dplyr::summarise_each(funs(sum)) %>% as.data.frame()
rownames(theta_break) <- theta_break[,1]
theta_break <- theta_break[,-1]
theta_break <- theta_break[match(c("A", "C", "G", "T"), rownames(theta_break)),]
breaks_theta <- theta_break
breaks_theta
breaks_theta_vec <- breaks_theta[,1]
breaks_theta_vec <- breaks_theta[,1, drop=FALSE]
melted <- data.frame(breaks_theta_vec)
melted$pos <- factor(c(rep("5' strand break", 4), rep("3' strand break", 4)),
levels = c("5' strand break", "3' strand break"))
melted$bases <- substring(rownames(breaks_theta_vec),1,1)
melted$type = rep(c("purine", "pyrimidine"), 4)
colnames(melted) <- c("value", "pos", "bases", "type")
ggplot(melted, aes(x = type, y = value, fill = bases)) +
geom_bar(stat = 'identity', position = 'stack') +
facet_wrap(~ pos, nrow=2) +
labs(x = "") + labs(y="") + labs(fill="") +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid  = element_blank(),
panel.border = element_rect(colour = "white")) +
theme(plot.margin = unit(c(0.01,0.01,0.01,0.01), "cm"))
library(Logolas)
mat <- matrix(0, nrow=4, ncol=2)
mat[c(1,3),1] <- breaks_theta_vec[c(1,3),1]
mat[c(2,4),2] <- breaks_theta_vec[c(2,4),1]
rownames(mat) <- c("A", "C", "G", "T")
colnames(mat) <- c("purine", "pyrimidine")
logomaker(mat,
hist=TRUE,
frame_width = 1,
cols= c("blue", "red"),
ic.scale = TRUE,
yscale_change = TRUE,
pop_name = "5' strand break",
xlab = "Papers",
ylab = "",
yaxis=FALSE,
cols_per_column = TRUE,
col_line_split="black")
source('~/Documents/Logolas/R/logomaker.R')
breaks_theta_vec <- breaks_theta[,1, drop=FALSE]
melted <- data.frame(breaks_theta_vec)
melted$pos <- factor(c(rep("5' strand break", 4), rep("3' strand break", 4)),
levels = c("5' strand break", "3' strand break"))
melted$bases <- substring(rownames(breaks_theta_vec),1,1)
melted$type = rep(c("purine", "pyrimidine"), 4)
colnames(melted) <- c("value", "pos", "bases", "type")
ggplot(melted, aes(x = type, y = value, fill = bases)) +
geom_bar(stat = 'identity', position = 'stack') +
facet_wrap(~ pos, nrow=2) +
labs(x = "") + labs(y="") + labs(fill="") +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid  = element_blank(),
panel.border = element_rect(colour = "white")) +
theme(plot.margin = unit(c(0.01,0.01,0.01,0.01), "cm"))
library(Logolas)
mat <- matrix(0, nrow=4, ncol=2)
mat[c(1,3),1] <- breaks_theta_vec[c(1,3),1]
mat[c(2,4),2] <- breaks_theta_vec[c(2,4),1]
rownames(mat) <- c("A", "C", "G", "T")
colnames(mat) <- c("purine", "pyrimidine")
logomaker(mat,
hist=TRUE,
frame_width = 1,
cols= c("blue", "red"),
ic.scale = TRUE,
yscale_change = TRUE,
pop_name = "5' strand break",
xlab = "Papers",
ylab = "",
yaxis=FALSE,
cols_per_column = TRUE,
col_line_split="black")
library(Logolas)
mat <- matrix(0, nrow=4, ncol=2)
mat[c(1,3),1] <- breaks_theta_vec[c(1,3),1]
mat[c(2,4),2] <- breaks_theta_vec[c(2,4),1]
rownames(mat) <- c("A", "C", "G", "T")
colnames(mat) <- c("purine", "pyrimidine")
logomaker(mat,
hist=TRUE,
frame_width = 1,
cols= c("blue", "red"),
ic.scale = TRUE,
yscale_change = TRUE,
pop_name = "5' strand break",
xlab = "Papers",
ylab = "",
yaxis=FALSE,
cols_per_column = TRUE,
col_line_split="black")
mat
source('~/Documents/Logolas/R/ic_computer.R')
source('~/Documents/Logolas/R/makemylogo.R')
?logomaker
?ic_computer
mat <- matrix(0, nrow=4, ncol=2)
mat[c(1,3),1] <- breaks_theta_vec[c(1,3),1]
mat[c(2,4),2] <- breaks_theta_vec[c(2,4),1]
rownames(mat) <- c("A", "C", "G", "T")
colnames(mat) <- c("purine", "pyrimidine")
logomaker(mat,
hist=TRUE,
frame_width = 1,
cols= c("blue", "red"),
ic.scale = TRUE,
yscale_change = TRUE,
pop_name = "5' strand break",
xlab = "Papers",
ylab = "",
yaxis=FALSE,
cols_per_column = TRUE,
col_line_split="black")
breaks_theta_vec <- breaks_theta[,2, drop=FALSE]
melted <- data.frame(breaks_theta_vec)
melted$pos <- factor(c(rep("5' strand break", 4), rep("3' strand break", 4)),
levels = c("5' strand break", "3' strand break"))
melted$bases <- substring(rownames(breaks_theta_vec),1,1)
melted$type = rep(c("purine", "pyrimidine"), 4)
colnames(melted) <- c("value", "pos", "bases", "type")
ggplot(melted, aes(x = type, y = value, fill = bases)) +
geom_bar(stat = 'identity', position = 'stack') +
facet_wrap(~ pos, nrow=2) +
labs(x = "") + labs(y="") + labs(fill="") +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid  = element_blank(),
panel.border = element_rect(colour = "white")) +
theme(plot.margin = unit(c(0.01,0.01,0.01,0.01), "cm"))
library(Logolas)
mat <- matrix(0, nrow=4, ncol=2)
mat[c(1,3),1] <- breaks_theta_vec[c(1,3),1]
mat[c(2,4),2] <- breaks_theta_vec[c(2,4),1]
rownames(mat) <- c("A", "C", "G", "T")
colnames(mat) <- c("purine", "pyrimidine")
logomaker(mat,
hist=TRUE,
frame_width = 1,
cols= c("blue", "red"),
ic.scale = TRUE,
yscale_change = TRUE,
pop_name = "5' strand break",
xlab = "Papers",
ylab = "",
yaxis=FALSE,
cols_per_column = TRUE,
col_line_split="black")
install.packages("ggplot2")
library(ggplot2)
ggplot2::ggplot(melted, aes(x = type, y = value, fill = bases)) +
geom_bar(stat = 'identity', position = 'stack') +
facet_wrap(~ pos, nrow=2) +
labs(x = "") + labs(y="") + labs(fill="") +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid  = element_blank(),
panel.border = element_rect(colour = "white")) +
theme(plot.margin = unit(c(0.01,0.01,0.01,0.01), "cm"))
breaks_theta_vec <- breaks_theta[,2, drop=FALSE]
melted <- data.frame(breaks_theta_vec)
melted$pos <- factor(c(rep("5' strand break", 4), rep("3' strand break", 4)),
levels = c("5' strand break", "3' strand break"))
melted$bases <- substring(rownames(breaks_theta_vec),1,1)
melted$type = rep(c("purine", "pyrimidine"), 4)
colnames(melted) <- c("value", "pos", "bases", "type")
library(Logolas)
mat <- matrix(0, nrow=4, ncol=2)
mat[c(1,3),1] <- breaks_theta_vec[c(1,3),1]
mat[c(2,4),2] <- breaks_theta_vec[c(2,4),1]
rownames(mat) <- c("A", "C", "G", "T")
colnames(mat) <- c("purine", "pyrimidine")
logomaker(mat,
hist=TRUE,
frame_width = 1,
cols= c("blue", "red"),
ic.scale = TRUE,
yscale_change = TRUE,
pop_name = "5' strand break",
xlab = "Papers",
ylab = "",
yaxis=FALSE,
cols_per_column = TRUE,
col_line_split="black")
breaks_theta_vec <- breaks_theta[,2, drop=FALSE]
library(Logolas)
mat <- matrix(0, nrow=4, ncol=2)
mat[c(1,3),1] <- breaks_theta_vec[c(1,3),1]
mat[c(2,4),2] <- breaks_theta_vec[c(2,4),1]
rownames(mat) <- c("A", "C", "G", "T")
colnames(mat) <- c("purine", "pyrimidine")
logomaker(mat,
hist=TRUE,
frame_width = 1,
cols= c("blue", "red"),
ic.scale = TRUE,
yscale_change = TRUE,
pop_name = "5' strand break",
xlab = "Papers",
ylab = "",
yaxis=FALSE,
cols_per_column = TRUE,
col_line_split="black")
breaks_theta_vec <- breaks_theta[,2, drop=FALSE]
mat <- matrix(0, nrow=4, ncol=2)
mat[c(1,3),1] <- breaks_theta_vec[c(1,3),1]
mat[c(2,4),2] <- breaks_theta_vec[c(2,4),1]
rownames(mat) <- c("A", "C", "G", "T")
colnames(mat) <- c("purine", "pyrimidine")
Logolas::logomaker(mat,
hist=TRUE,
frame_width = 1,
cols= c("blue", "red"),
ic.scale = TRUE,
yscale_change = TRUE,
pop_name = "5' strand break",
xlab = "Papers",
ylab = "",
yaxis=FALSE,
cols_per_column = TRUE,
col_line_split="black")
devtools::install_github("kkdey/Logolas")
breaks_theta_vec <- breaks_theta[,2, drop=FALSE]
mat <- matrix(0, nrow=4, ncol=2)
mat[c(1,3),1] <- breaks_theta_vec[c(1,3),1]
mat[c(2,4),2] <- breaks_theta_vec[c(2,4),1]
rownames(mat) <- c("A", "C", "G", "T")
colnames(mat) <- c("purine", "pyrimidine")
Logolas::logomaker(mat,
hist=TRUE,
frame_width = 1,
cols= c("blue", "red"),
ic.scale = TRUE,
yscale_change = TRUE,
pop_name = "5' strand break",
xlab = "Papers",
ylab = "",
yaxis=FALSE,
cols_per_column = TRUE,
col_line_split="black")
rownames(breaks_theta_vec)
rownames(breaks_theta_vec) ! = c("A", "C", "G", "T")
rownames(breaks_theta_vec) != c("A", "C", "G", "T")
rownames(breaks_theta_vec)
all(rownames(breaks_theta_vec) == c("A", "C", "G", "T"))
if(all(rownames(breaks_theta_vec) == c("A", "C", "G", "T"))){
stop("the rownames must be A, C, G, T in that sequence")
}
any(rownames(breaks_theta_vec) != c("A", "C", "G", "T"))
source('~/Documents/aRchaic/R/damageLogo_5.R')
damageLogo_5(topic_clus$theta, flanking_bases = 1)
damageLogo_five(topic_clus$theta, flanking_bases = 1)
library(aRchaic)
source('~/Documents/CountClust/R/StructureGGplot.R')
damageLogo_five(topic_clus$theta, flanking_bases = 1)
mat <- t(theta_pool)
colnames(mat)[1]
pos <- as.numeric(sapply(as.character(colnames(mat)), function(l)
{
sym <- strsplit(as.character(l), "")[[1]]
return(paste(sym[((4+2*flanking_bases)+6):length(sym)], collapse=""))
}))
pos
source('~/Documents/aRchaic/R/filter_signatures_only_location.R')
source('~/Documents/aRchaic/R/damageLogo_5.R')
damageLogo_five(topic_clus$theta, flanking_bases = 1)
source('~/Documents/aRchaic/R/damageLogo.R')
damageLogo_five(topic_clus$theta, flanking_bases = 1)
source('~/Documents/aRchaic/R/damageLogo_pos.R')
damageLogo_five(topic_clus$theta, flanking_bases = 1)
library(grid)
damageLogo_five(topic_clus$theta, flanking_bases = 1)
library(gridBase)
damageLogo_five(topic_clus$theta, flanking_bases = 1)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
remove.packages("cowplot")
remove.packages("CountClust")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
setwd("~/Documents/ancient-damage/R")
dir <- "../data/Fu_2016/";
out <- aggregate_bin_counts(dir, breaks = c(-1, seq(1,20,1)))
library(aRchaic)
dir <- "../data/Fu_2016/";
out <- aggregate_bin_counts(dir, breaks = c(-1, seq(1,20,1)))
