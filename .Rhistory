new_sig_split[,4] <- sig_split[,7]
new_sig_split[,5] <- sig_split[,8]
new_sig_split
as.numeric(new_sig_split)
new_sig_split
dim(new_sig_split)
factor(as.numeric(new_sig_split[,1]))
levels(new_sig_split[,1])
levels(factor(new_sig_split[,1]))
levels(factor(new_sig_split[,1])) <- c("0", "1", "2", "3", "4")
levels(factor(new_sig_split[,1])) <- c("0", "1", "2", "3", "4")
levels(as.factor(new_sig_split[,1])) <- c("0", "1", "2", "3", "4")
levels(as.factor(new_sig_split[,1])) <- c("0", "1", "2", "3", "4")
levels(new_sig_split[,1]) <- c("0", "1", "2", "3", "4")
new_sig_split
new_sig_split[,1]
temp <- as.factor(new_sig_split[,1])
levels(temp)
mapvalues(temp, from = levels(temp), to = c("0", "1", "2", "3", "4"))
plyr::mapvalues(temp, from = levels(temp), to = c("0", "1", "2", "3", "4"))
plyr::mapvalues(temp, from = levels(temp), to = 0:4)
plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1))
mat <- as.numeric()
for(k in 1:dim(new_sig_split)[2]){
temp <- as.factor(new_sig_split[,1])
mat <- cbind.data.frame(mat,plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1)))
}
mat <- matrix(0, dim(new_sig_split)[1], dim(new_sig_split)[2])
for(k in 1:dim(new_sig_split)[2]){
temp <- as.factor(new_sig_split[,1])
mat[,k] <- plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1)))
}
mat <- matrix(0, dim(new_sig_split)[1], dim(new_sig_split)[2])
for(k in 1:dim(new_sig_split)[2]){
temp <- as.factor(new_sig_split[,1])
mat[,k] <- plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1))
}
mat
mat[,3]
mat[,1]
mat <- matrix(0, dim(new_sig_split)[1], dim(new_sig_split)[2])
for(k in 1:dim(new_sig_split)[2]){
temp <- as.factor(new_sig_split[,k])
mat[,k] <- plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1))
}
mat
mat[,3]
mat[,1]
k
temp
0:(length(levels(temp))-1)
levels(temp)
temp
plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1))
mat[,k] <- plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1))
mat[,k]
mat[,k] <- as.numeric(plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1)))
mat[,k]
mat[,k] <- as.numeric(as.matrix(plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1))))
mat[,k]
mat <- matrix(0, dim(new_sig_split)[1], dim(new_sig_split)[2])
for(k in 1:dim(new_sig_split)[2]){
temp <- as.factor(new_sig_split[,k])
mat[,k] <- as.numeric(as.matrix(plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1))))
}
mat
mat[,3]
mat[,1]
mat <- matrix(0, dim(new_sig_split)[1], dim(new_sig_split)[2])
for(k in 1:dim(new_sig_split)[2]){
temp <- as.factor(new_sig_split[,k])
print(levels(temp))
mat[,k] <- as.numeric(as.matrix(plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1))))
}
source('~/Documents/maptpx/R/tpx.R')
source('~/Documents/maptpx/R/topics.R')
source('~/Documents/maptpx/R/count.R')
source('~/Documents/maptpx/R/count.R')
topic_clus <- topics(filtered_counts, K=3, type="independent", signatures = signatures)
library(slam)
topic_clus <- topics(filtered_counts, K=3, type="independent", signatures = signatures)
source('~/Documents/maptpx/R/topics.R')
topic_clus <- topics(filtered_counts, K=3, type="independent", signatures = signatures)
signatures <- mat;
topic_clus <- topics(filtered_counts, K=3, type="independent", signatures = signatures)
library(maptpx)
source('~/Documents/maptpx/R/topics.R')
source('~/Documents/maptpx/R/tpx.R')
source('~/Documents/maptpx/R/count.R')
topic_clus <- topics(filtered_counts, K=3, type="independent", signatures = signatures)
topic_clus <- topics(filtered_counts, K=3, type="independent", signatures = signatures)
signatures
f_array
source('~/Documents/maptpx/R/tpx.R')
topic_clus <- topics(filtered_counts, K=3, type="independent", signatures = signatures)
topic_clus <- topics(filtered_counts, K=3, type="independent", signatures = signatures, tol=10)
topics_clus <- topic_clus
omega <- topics_clus$omega
annotation <- data.frame(
sample_id = paste0("X", c(1:NROW(omega))),
tissue_label = factor(labs)
)
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Moderns vs Ancients",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],": pmsignature: withput position information"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
signature_set <- colnames(filtered_counts)
labs <- character();
labs <- rep("ancient", dim(clubbed_counts)[1])
labs[control_indices] <- "controls"
annotation <- data.frame(
sample_id = paste0("X", c(1:NROW(omega))),
tissue_label = factor(labs)
)
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Moderns vs Ancients",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],": pmsignature: withput position information"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
names <- rownames(clubbed_counts_xx);
control_indices <- c(grep("EXN", names), grep("Libneg", names), grep("PCRneg", names))
labs <- character();
labs <- rep("ancient", dim(clubbed_counts)[1])
labs[control_indices] <- "controls"
annotation <- data.frame(
sample_id = paste0("X", c(1:NROW(omega))),
tissue_label = factor(labs)
)
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Moderns vs Ancients",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],": pmsignature: withput position information"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
signature_set <- colnames(filtered_counts)
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Moderns vs Ancients",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],": pmsignature: withput position information"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
omega
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Moderns vs Ancients",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],": pmsignature: withput position information"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Moderns vs Ancients",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],": pmsignature: withput position information"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Moderns vs Ancients",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],": pmsignature: withput position information"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
par(mfrow=c(1,1))
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Moderns vs Ancients",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],": pmsignature: withput position information"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
par(mfrow=c(1,1))
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Moderns vs Ancients",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],": pmsignature: withput position information"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
save(topics_clus, file="../rda/topicmodel_independent_K_3.rda")
save(topics_clus, file="../rda/topicmodel_independent_K_3.rda")
topics_clus <-  get(load("../rda/topicmodel_independent_K_3.rda"))
omega <- topics_clus$omega
names <- rownames(clubbed_counts_xx);
control_indices <- c(grep("EXN", names), grep("Libneg", names), grep("PCRneg", names))
labs <- character();
labs <- rep("ancient", dim(clubbed_counts)[1])
labs[control_indices] <- "controls"
annotation <- data.frame(
sample_id = paste0("X", c(1:NROW(omega))),
tissue_label = factor(labs)
)
par(mfrow=c(1,1))
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Moderns vs Ancients",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],": pmsignature: independence"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
devtools::install_github("kkdey/maptpx")
library(maptpx)
signature_counts <- get(load("../processed_data/lindo2016ancients-counts-table.rda"))
validation_check <- club_signature_validation_plot(signature_counts, log=TRUE)
clubbed_counts <- club_signature_counts(signature_counts)
filtered_counts_ancient <- filter_signatures_wo_location(clubbed_counts);
setwd("~/Documents/ancient-damage/R")
signature_counts <- get(load("../processed_data/lindo2016ancients-counts-table.rda"))
validation_check <- club_signature_validation_plot(signature_counts, log=TRUE)
clubbed_counts <- club_signature_counts(signature_counts)
filtered_counts_ancient <- filter_signatures_wo_location(clubbed_counts);
library(aRchaic)
signature_counts <- get(load("../processed_data/lindo2016ancients-counts-table.rda"))
validation_check <- club_signature_validation_plot(signature_counts, log=TRUE)
clubbed_counts <- club_signature_counts(signature_counts)
filtered_counts_ancient <- filter_signatures_wo_location(clubbed_counts);
signature_counts <- get(load("../processed_data/lindo2016moderns-counts-table.rda"))
validation_check <- club_signature_validation_plot(signature_counts, log=TRUE)
clubbed_counts <- club_signature_counts(signature_counts)
filtered_counts_modern <- filter_signatures_wo_location(clubbed_counts);
filtered_counts_pooled <- rbind(filtered_counts_ancient, filtered_counts_modern)
dim(filtered_counts_pooled)
topics_clus <- maptpx::topics(filtered_counts_pooled, K=2, type="full", tol=10)
devtools::install_github("kkdey/maptpx")
library(maptpx)
topics_clus <- maptpx::topics(filtered_counts_pooled, K=2, type="full", tol=10)
devtools::install_github("kkdey/maptpx")
library(maptpx)
topics_clus <- maptpx::topics(filtered_counts_pooled, K=2, type="full", tol=10)
topics_clus <- maptpx::topics(filtered_counts_pooled, K=2, type="independent", tol=10, signatures = signatures)
signature_set <- colnames(filtered_counts)
sig_split <- t(sapply(1:length(signature_set), function(x) return(strsplit(signature_set[x], "")[[1]])))
new_sig_split <- matrix(0, dim(sig_split)[1], 5);
new_sig_split[,1] <- sig_split[,1]
new_sig_split[,2] <- sig_split[,2]
new_sig_split[,3] <- sapply(1:length(signature_set), function(x) return(paste(sig_split[x,3:6], collapse="")))
new_sig_split[,4] <- sig_split[,7]
new_sig_split[,5] <- sig_split[,8]
levels(new_sig_split[,1]) <- c("0", "1", "2", "3", "4")
mat <- matrix(0, dim(new_sig_split)[1], dim(new_sig_split)[2])
for(k in 1:dim(new_sig_split)[2]){
temp <- as.factor(new_sig_split[,k])
mat[,k] <- as.numeric(as.matrix(plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1))))
}
signatures <- mat;
signature_set <- colnames(filtered_counts_pooled)
sig_split <- t(sapply(1:length(signature_set), function(x) return(strsplit(signature_set[x], "")[[1]])))
new_sig_split <- matrix(0, dim(sig_split)[1], 5);
new_sig_split[,1] <- sig_split[,1]
new_sig_split[,2] <- sig_split[,2]
new_sig_split[,3] <- sapply(1:length(signature_set), function(x) return(paste(sig_split[x,3:6], collapse="")))
new_sig_split[,4] <- sig_split[,7]
new_sig_split[,5] <- sig_split[,8]
levels(new_sig_split[,1]) <- c("0", "1", "2", "3", "4")
mat <- matrix(0, dim(new_sig_split)[1], dim(new_sig_split)[2])
for(k in 1:dim(new_sig_split)[2]){
temp <- as.factor(new_sig_split[,k])
mat[,k] <- as.numeric(as.matrix(plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1))))
}
signatures <- mat;
signatures
topics_clus <- maptpx::topics(filtered_counts_pooled, K=2, type="independent", tol=10, signatures = signatures)
devtools::install_github("kkdey/maptpx")
topics_clus <- maptpx::topics(filtered_counts_pooled, K=2, type="independent", tol=10, signatures = signatures)
topics_clus_2 <- maptpx::topics(filtered_counts_pooled, K=2, type="independent", tol=10, signatures = signatures)
labs <- c(rep("Ancient",25), rep("Modern",25))
omega <- topics_clus_2$omega
annotation <- data.frame(
sample_id = paste0("X", c(1:NROW(omega))),
tissue_label = factor(labs)
)
rownames(omega) <- annotation$sample_id;
StructureGGplot(omega = omega,
annotation = annotation,
palette = rev(RColorBrewer::brewer.pal(8, "Accent")),
yaxis_label = "Development Phase",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],", no C -> T / G -> A"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = rev(RColorBrewer::brewer.pal(8, "Accent")),
yaxis_label = "Development Phase",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],", no C -> T / G -> A"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Development Phase",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],", no C -> T / G -> A"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
signature_set <- colnames(filtered_counts)
signature_set <- colnames(filtered_counts_pooled)
apply(CountClust::ExtractTopFeatures(topics_clus$theta, top_features = 10, method="poisson", options="min"), c(1,2), function(x) signature_set[x])
apply(CountClust::ExtractTopFeatures(topics_clus_2$theta, top_features = 10, method="poisson", options="min"), c(1,2), function(x) signature_set[x])
omega <- topics_clus_1$omega
annotation <- data.frame(
sample_id = paste0("X", c(1:NROW(omega))),
tissue_label = factor(labs)
)
rownames(omega) <- annotation$sample_id;
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Development Phase",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],", no C -> T / G -> A"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
signature_set <- colnames(filtered_counts_pooled)
apply(CountClust::ExtractTopFeatures(topics_clus_1$theta, top_features = 10, method="poisson", options="min"), c(1,2), function(x) signature_set[x])
topics_clus_1 <- maptpx::topics(filtered_counts_pooled, K=2, type="full", tol=10)
labs <- c(rep("Ancient",25), rep("Modern",25))
omega <- topics_clus_1$omega
annotation <- data.frame(
sample_id = paste0("X", c(1:NROW(omega))),
tissue_label = factor(labs)
)
rownames(omega) <- annotation$sample_id;
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Development Phase",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],", no C -> T / G -> A"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
signature_set <- colnames(filtered_counts_pooled)
apply(CountClust::ExtractTopFeatures(topics_clus_1$theta, top_features = 10, method="poisson", options="min"), c(1,2), function(x) signature_set[x])
topics_clus_1 <- maptpx::topics(filtered_counts_pooled, K=3, type="full", tol=10)
topics_clus_2 <- maptpx::topics(filtered_counts_pooled, K=3, type="independent", tol=10, signatures = signatures)
labs <- c(rep("Ancient",25), rep("Modern",25))
omega <- topics_clus_1$omega
annotation <- data.frame(
sample_id = paste0("X", c(1:NROW(omega))),
tissue_label = factor(labs)
)
rownames(omega) <- annotation$sample_id;
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Development Phase",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],", no C -> T / G -> A"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
signature_set <- colnames(filtered_counts_pooled)
apply(CountClust::ExtractTopFeatures(topics_clus_1$theta, top_features = 10, method="poisson", options="min"), c(1,2), function(x) signature_set[x])
labs <- c(rep("Ancient",25), rep("Modern",25))
omega <- topics_clus_2$omega
annotation <- data.frame(
sample_id = paste0("X", c(1:NROW(omega))),
tissue_label = factor(labs)
)
rownames(omega) <- annotation$sample_id;
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Development Phase",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],", no C -> T / G -> A"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
signature_set <- colnames(filtered_counts_pooled)
apply(CountClust::ExtractTopFeatures(topics_clus_2$theta, top_features = 10, method="poisson", options="min"), c(1,2), function(x) signature_set[x])
devtools::install_github("kkdey/maptpx")
devtools::install_github("kkdey/maptpx")
devtools::install_github("kkdey/maptpx", force=TRUE)
devtools::install_github("kkdey/maptpx")
devtools::install_github("kkdey/maptpx", force=TRUE)
library(maptpx)
library(aRchaic)
setwd("~/Documents/ancient-damage/R")
signature_counts <- get(load("../processed_data/lindo2016ancients-counts-table.rda"))
validation_check <- club_signature_validation_plot(signature_counts, log=TRUE)
clubbed_counts <- club_signature_counts(signature_counts)
filtered_counts_ancient <- filter_signatures_wo_location(clubbed_counts);
signature_counts <- get(load("../processed_data/lindo2016moderns-counts-table.rda"))
validation_check <- club_signature_validation_plot(signature_counts, log=TRUE)
clubbed_counts <- club_signature_counts(signature_counts)
filtered_counts_modern <- filter_signatures_wo_location(clubbed_counts);
filtered_counts_pooled <- rbind(filtered_counts_ancient, filtered_counts_modern)
signature_set <- colnames(filtered_counts_pooled)
sig_split <- t(sapply(1:length(signature_set), function(x) return(strsplit(signature_set[x], "")[[1]])))
new_sig_split <- matrix(0, dim(sig_split)[1], 5);
new_sig_split[,1] <- sig_split[,1]
new_sig_split[,2] <- sig_split[,2]
new_sig_split[,3] <- sapply(1:length(signature_set), function(x) return(paste(sig_split[x,3:6], collapse="")))
new_sig_split[,4] <- sig_split[,7]
new_sig_split[,5] <- sig_split[,8]
levels(new_sig_split[,1]) <- c("0", "1", "2", "3", "4")
mat <- matrix(0, dim(new_sig_split)[1], dim(new_sig_split)[2])
for(k in 1:dim(new_sig_split)[2]){
temp <- as.factor(new_sig_split[,k])
mat[,k] <- as.numeric(as.matrix(plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1))))
}
signatures <- mat;
topics_clus_2 <- maptpx::topics(filtered_counts_pooled, K=3, type="independent", tol=10, signatures = signatures)
labs <- c(rep("Ancient",25), rep("Modern",25))
omega <- topics_clus_2$omega
annotation <- data.frame(
sample_id = paste0("X", c(1:NROW(omega))),
tissue_label = factor(labs)
)
rownames(omega) <- annotation$sample_id;
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Development Phase",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],", no C -> T / G -> A"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
signature_set <- colnames(filtered_counts_pooled)
apply(CountClust::ExtractTopFeatures(topics_clus_2$theta, top_features = 10, method="poisson", options="min"), c(1,2), function(x) signature_set[x])
topics_clus_1 <- maptpx::topics(filtered_counts_pooled, K=3, type="full", tol=10)
labs <- c(rep("Ancient",25), rep("Modern",25))
omega <- topics_clus_1$omega
annotation <- data.frame(
sample_id = paste0("X", c(1:NROW(omega))),
tissue_label = factor(labs)
)
rownames(omega) <- annotation$sample_id;
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Development Phase",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],", no C -> T / G -> A"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
signature_set <- colnames(filtered_counts_pooled)
apply(CountClust::ExtractTopFeatures(topics_clus_1$theta, top_features = 10, method="poisson", options="min"), c(1,2), function(x) signature_set[x])
