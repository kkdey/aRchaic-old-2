axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
omega
topics_clus <- get(load(file="../rda/annagosling2016/topics-annagosling2016-k-3.rda"))
theta <- topics_clus$theta
damageLogo(theta, ic.scale = FALSE, pop_names = paste0("Cluster ",1:dim(theta)[2]))
omega <- topics_clus$omega
annotation <- data.frame(
sample_id = paste0("X", c(1:NROW(omega))),
tissue_label = factor(labs)
)
rownames(omega) <- annotation$sample_id;
topics_clus <- get(load(file="../rda/annagosling2016/topics-annagosling2016-k-3-filtered.rda"))
theta <- topics_clus$theta
damageLogo(theta, ic.scale = FALSE, pop_names = paste0("Cluster ",1:dim(theta)[2]))
omega <- topics_clus$omega
annotation <- data.frame(
sample_id = paste0("X", c(1:NROW(omega))),
tissue_label = factor(labs)
)
rownames(omega) <- annotation$sample_id;
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Moderns vs Ancients",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],": pmsignature: with position information"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
signature_set <- rownames(theta)
apply(CountClust::ExtractTopFeatures(theta, top_features = 10, method="poisson", options="min"), c(1,2), function(x) signature_set[x])
topics_clus <- get(load(file="../rda/annagosling2016/topics-annagosling2016-k-3-filtered.rda"))
dim(topics_clus$theta)
theta <- topics_clus$theta
damageLogo(theta, ic.scale = FALSE, pop_names = paste0("Cluster ",1:dim(theta)[2]))
omega <- topics_clus$omega
annotation <- data.frame(
sample_id = paste0("X", c(1:NROW(omega))),
tissue_label = factor(labs)
)
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Moderns vs Ancients",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],": pmsignature: with position information"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
omega
signature_set <- rownames(theta)
apply(CountClust::ExtractTopFeatures(theta, top_features = 10, method="poisson", options="min"), c(1,2), function(x) signature_set[x])
pattern_plot(file="../data/AnnaGosling2016data/ADR-T1-S20.dup.q30.csv",
pattern = "C->T",
plot_type="left")
pattern_plot(file="../data/AnnaGosling2016data/ADR-T2-Libneg1.dup.q30.csv",
pattern = "C->T",
plot_type="left")
pattern_plot(file="../data/AnnaGosling2016data/ADR-T2-EXN1.dup.q30.csv",
pattern = "C->T",
plot_type="left")
pattern_plot(file="../data/AnnaGosling2016data/ADR-T2-EXN3.dup.q30.csv",
pattern = "C->T",
plot_type="left")
omega
pattern_plot(file="../data/AnnaGosling2016data/ADR-T1-S33.dup.q30.csv",
pattern = "C->T",
plot_type="left")
pattern_plot(file="../data/AnnaGosling2016data/ADR-T2-Libneg2.dup.q30.csv",
pattern = "C->T",
plot_type="left")
source('~/Documents/aRchaic/R/pattern_plot_damage.R')
pattern_plot(file="../data/AnnaGosling2016data/ADR-T2-EXN3.dup.q30.csv",
pattern = "C->T",
plot_type="left",
sample_name="EXN3")
source('~/Documents/aRchaic/R/pattern_plot_damage.R')
pattern_plot(file="../data/AnnaGosling2016data/ADR-T2-EXN3.dup.q30.csv",
pattern = "C->T",
plot_type="left",
sample_name="EXN3")
pattern_plot(file="../data/AnnaGosling2016data/ADR-T1-S33.dup.q30.csv",
pattern = "C->T",
plot_type="left")
pattern_plot(file="../data/AnnaGosling2016data/ADR-T1-S33.dup.q30.csv",
pattern = "C->T",
plot_type="left",
sample_name = "S33")
pattern_plot(file="../data/AnnaGosling2016data/ADR-T2-Libneg3.dup.q30.csv",
pattern = "C->T",
plot_type="left",
sample_name = "Libneg3")
pattern_plot(file="../data/AnnaGosling2016data/ADR-T2-Libneg2.dup.q30.csv",
pattern = "C->T",
plot_type="left",
sample_name = "Libneg2")
pattern_plot(file="../data/AnnaGosling2016data/ADR-T2-Libneg1.dup.q30.csv",
pattern = "C->T",
plot_type="left",
sample_name = "Libneg1")
pattern_plot(file="../data/AnnaGosling2016data/ADR-T2-PCRneg.dup.q30.csv",
pattern = "C->T",
plot_type="left",
sample_name = "PCRneg")
pattern_plot(file="../data/AnnaGosling2016data/ADR-T1-S20.dup.q30.csv",
pattern = "C->T",
plot_type="left",
sample_name = "S20")
signature_counts <- get(load("../processed_data/annagosling2016-counts-table.rda"))
validation_check <- club_signature_validation_plot(signature_counts, log=TRUE)
clubbed_counts <- club_signature_counts(signature_counts)
clubbed_counts <- clubbed_counts[-28,];
setwd("~/Documents/ancient-damage/R")
signature_counts <- get(load("../processed_data/annagosling2016-counts-table.rda"))
validation_check <- club_signature_validation_plot(signature_counts, log=TRUE)
clubbed_counts <- club_signature_counts(signature_counts)
clubbed_counts <- clubbed_counts[-28,];
library(aRchaic)
signature_counts <- get(load("../processed_data/annagosling2016-counts-table.rda"))
validation_check <- club_signature_validation_plot(signature_counts, log=TRUE)
clubbed_counts <- club_signature_counts(signature_counts)
clubbed_counts <- clubbed_counts[-28,];
dim(clubbed_counts)
rowSums(clubbed_counts)
filtered_counts_2 <- filter_signatures_w_mutation(clubbed_counts)
filtered_counts_2
prop <- filtered_counts_2[,3]/rowSums(clubbed_counts)
prop
plot(prop)
names <- rownames(clubbed_counts);
control_indices <- c(grep("EXN", names), grep("Libneg", names), grep("PCRneg", names))
labs <- character();
labs <- rep("ancient", dim(clubbed_counts)[1])
labs[control_indices] <- "controls"
plot(prop, col=labs)
plot(prop, col=factor(labs), pch=20)
legend("bottomleft", legend = c("ancients", "controls"), fill=c("black", "red"))
plot(prop, col=factor(labs), pch=20, ylim="proportion of C-> T changes", xlim="sample index")
plot(prop, col=factor(labs), pch=20, ylab="proportion of C-> T changes", xlab="sample index")
legend("bottomleft", legend = c("ancients", "controls"), fill=c("black", "red"), cex=0.3)
plot(prop, col=factor(labs), pch=20, ylab="proportion of C-> T changes", xlab="sample index")
legend("bottomleft", legend = c("ancients", "controls"), fill=c("black", "red"), cex=0.5)
prop
rowSums(clubbed_counts)
pattern_plot(file="../data/AnnaGosling2016data/ADR-T1-S32.dup.q30.csv",
pattern = "C->T",
plot_type="left",
sample_name = "S32")
prop
rowSums(clubbed_counts)
pattern_plot(file="../data/AnnaGosling2016data/ADR-T1-S34.dup.q30.csv",
pattern = "C->T",
plot_type="left",
sample_name = "S34")
pattern_plot(file="../data/AnnaGosling2016data/ADR-T2-Libneg1.dup.q30.csv",
pattern = "C->T",
plot_type="left",
sample_name = "Libneg1")
filtered_counts <- filter_signatures_wo_location(clubbed_counts);
names <- colnames(filtered_counts);
names_mod <- as.vector(sapply(names, function(x) {
if(!is.element("X", strsplit(x, "")[[1]])){
return(paste(strsplit(x, "")[[1]][3:6], collapse=""))
} else{
return(paste(c(strsplit(x, "")[[1]][3:6], " (X)"), collapse=""))
}
}))
filtered_counts_w_mutation <- numeric();
for(num in 1:dim(filtered_counts)[1]){
filtered_counts_w_mutation <- rbind(filtered_counts_w_mutation,
tapply(filtered_counts[num,],
factor(names_mod), sum))
}
rownames(filtered_counts_w_mutation) <- rownames(filtered_counts)
dim(filtered_counts_w_mutation)
colnames(filtered_counts_w_mutation)
propX <- filtered_counts_w_mutation[,6]/rowSums(clubbed_counts)
propX
plot(propX, col=factor(labs), pch=20, ylab="proportion of C-> T changes", xlab="sample index")
legend("bottomleft", legend = c("ancients", "controls"), fill=c("black", "red"), cex=0.5)
colnames(filtered_counts_w_mutation)
prop_general <- filtered_counts_w_mutation[,5]/rowSums(clubbed_counts)
plot(propX, prop_general, col=factor(labs), pch=20, ylab="proportion of C-> T changes", xlab="sample index")
legend("bottomleft", legend = c("ancients", "controls"), fill=c("black", "red"), cex=0.5)
plot(propX, prop_general, col=factor(labs), pch=20, ylab="proportion of C-> T changes", xlab="sample index")
legend("bottomright", legend = c("ancients", "controls"), fill=c("black", "red"), cex=0.5)
plot(propX, prop_general, col=factor(labs), pch=20, ylab="proportion of C-> T changes", xlab="sample index")
legend("topright", legend = c("ancients", "controls"), fill=c("black", "red"), cex=0.5)
plot(propX, (prop_general+ propX), col=factor(labs), pch=20, ylab="proportion of C-> T (X)", xlab="proportion of C->T")
plot(propX, prop_general, col=factor(labs), pch=20, ylab="proportion of C-> T (X)", xlab="proportion of C->T (no X)")
legend("bottomright", legend = c("ancients", "controls"), fill=c("black", "red"), cex=0.6)
par(mfrow=c(1,2))
plot(propX, (prop_general+ propX), col=factor(labs), pch=20, ylab="proportion of C-> T (X)", xlab="proportion of C->T")
legend("bottomright", legend = c("ancients", "controls"), fill=c("black", "red"), cex=0.6)
plot(propX, prop_general, col=factor(labs), pch=20, ylab="proportion of C-> T (X)", xlab="proportion of C->T (no X)")
legend("topright", legend = c("ancients", "controls"), fill=c("black", "red"), cex=0.6)
par(mfrow=c(2,1))
plot(propX, (prop_general+ propX), col=factor(labs), pch=20, ylab="proportion of C-> T (X)", xlab="proportion of C->T")
legend("bottomright", legend = c("ancients", "controls"), fill=c("black", "red"), cex=0.6)
plot(propX, prop_general, col=factor(labs), pch=20, ylab="proportion of C-> T (X)", xlab="proportion of C->T (no X)")
legend("topright", legend = c("ancients", "controls"), fill=c("black", "red"), cex=0.6)
par(mfrow=c(1,1))
plot(propX, (prop_general+ propX), col=factor(labs), pch=20, ylab="proportion of C-> T (X)", xlab="proportion of C->T")
legend("bottomright", legend = c("ancients", "controls"), fill=c("black", "red"), cex=0.6)
plot(propX, prop_general, col=factor(labs), pch=20, ylab="proportion of C-> T (X)", xlab="proportion of C->T (no X)")
legend("topright", legend = c("ancients", "controls"), fill=c("black", "red"), cex=0.6)
plot(propX, (prop_general+ propX), col=factor(labs), pch=20, ylab="proportion of C-> T (X)", xlab="sample index")
legend("bottomright", legend = c("ancients", "controls"), fill=c("black", "red"), cex=0.6)
plot(propX, col=factor(labs), pch=20, ylab="proportion of C-> T (X)", xlab="sample index")
legend("bottomright", legend = c("ancients", "controls"), fill=c("black", "red"), cex=0.6)
propX
signature_counts <- get(load("../processed_data/annagosling2016-counts-table.rda"))
library(aRchaic)
signature_counts <- get(load("../processed_data/annagosling2016-counts-table.rda"))
setwd("~/Documents/ancient-damage/R")
signature_counts <- get(load("../processed_data/annagosling2016-counts-table.rda"))
clubbed_counts <- club_signature_counts(signature_counts)
dim(clubbed_counts)
colnames(club_signature_counts())
colnames(clubbed_counts)
signature_counts <- get(load("../processed_data/annagosling2016-counts-table.rda"))
validation_check <- club_signature_validation_plot(signature_counts, log=TRUE)
clubbed_counts <- club_signature_counts(signature_counts)
clubbed_counts <- clubbed_counts[-28,];
filtered_counts <- filter_signatures_wo_location(clubbed_counts);
filtered_counts
dim(filtered_counts)
signature_set <- colnames(filtered_counts)
signature_set
strsplit(signature_set[1,], "")
strsplit(signature_set[1,], "[.]")
signature_set <- colnames(filtered_counts)
strsplit(signature_set[1,], "[.]")
strsplit(signature_set[1], "[.]")
strsplit(signature_set[1], "")
sig_split <- sapply(signature_set, function(l) return(strsplit(x, "")[[1]]))
signature_set
sig_split <- sapply(signature_set, function(l) return(strsplit(x, "")[[1]]))
sig_split <- sapply(1:length(signature_set), function(l) return(strsplit(signature_set[x], "")[[1]]))
sig_split <- lapply(1:length(signature_set), function(l) return(strsplit(signature_set[x], "")[[1]]))
sig_split <- lapply(1:length(signature_set), function(x) return(strsplit(signature_set[x], "")[[1]]))
sig_split
sig_split <- sapply(1:length(signature_set), function(x) return(strsplit(signature_set[x], "")[[1]]))
sig_split
sig_split <- t(sapply(1:length(signature_set), function(x) return(strsplit(signature_set[x], "")[[1]])))
sig_split
paste(sig_split[,3:6], collapse=TRUE)
paste(sig_split[,3:6])
sig_split[,3:6]
paste0(sig_split[,3:6], collapse = TRUE)
paste0(sig_split[,3:6], collapse = "")
paste0(sig_split[1,3:6], collapse = "")
new_sig_split[,3] <- sapply(1:length(signature_set), function(x) return(paste(sig_split[x,3:6], collapse=TRUE)))
new_sig_split[,3] <- sapply(1:length(signature_set), function(x) return(paste(sig_split[x,3:6], collapse="")))
new_sig_split <- matrix(0, dim(sig_split)[1], 5);
new_sig_split[,1] <- sig_split[,1]
new_sig_split[,2] <- sig_split[,2]
new_sig_split[,3] <- sapply(1:length(signature_set), function(x) return(paste(sig_split[x,3:6], collapse="")))
new_sig_split[,4] <- sig_split[,7]
new_sig_split[,5] <- sig_split[,8]
new_sig_split
as.numeric(new_sig_split)
new_sig_split
dim(new_sig_split)
factor(as.numeric(new_sig_split[,1]))
levels(new_sig_split[,1])
levels(factor(new_sig_split[,1]))
levels(factor(new_sig_split[,1])) <- c("0", "1", "2", "3", "4")
levels(factor(new_sig_split[,1])) <- c("0", "1", "2", "3", "4")
levels(as.factor(new_sig_split[,1])) <- c("0", "1", "2", "3", "4")
levels(as.factor(new_sig_split[,1])) <- c("0", "1", "2", "3", "4")
levels(new_sig_split[,1]) <- c("0", "1", "2", "3", "4")
new_sig_split
new_sig_split[,1]
temp <- as.factor(new_sig_split[,1])
levels(temp)
mapvalues(temp, from = levels(temp), to = c("0", "1", "2", "3", "4"))
plyr::mapvalues(temp, from = levels(temp), to = c("0", "1", "2", "3", "4"))
plyr::mapvalues(temp, from = levels(temp), to = 0:4)
plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1))
mat <- as.numeric()
for(k in 1:dim(new_sig_split)[2]){
temp <- as.factor(new_sig_split[,1])
mat <- cbind.data.frame(mat,plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1)))
}
mat <- matrix(0, dim(new_sig_split)[1], dim(new_sig_split)[2])
for(k in 1:dim(new_sig_split)[2]){
temp <- as.factor(new_sig_split[,1])
mat[,k] <- plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1)))
}
mat <- matrix(0, dim(new_sig_split)[1], dim(new_sig_split)[2])
for(k in 1:dim(new_sig_split)[2]){
temp <- as.factor(new_sig_split[,1])
mat[,k] <- plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1))
}
mat
mat[,3]
mat[,1]
mat <- matrix(0, dim(new_sig_split)[1], dim(new_sig_split)[2])
for(k in 1:dim(new_sig_split)[2]){
temp <- as.factor(new_sig_split[,k])
mat[,k] <- plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1))
}
mat
mat[,3]
mat[,1]
k
temp
0:(length(levels(temp))-1)
levels(temp)
temp
plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1))
mat[,k] <- plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1))
mat[,k]
mat[,k] <- as.numeric(plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1)))
mat[,k]
mat[,k] <- as.numeric(as.matrix(plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1))))
mat[,k]
mat <- matrix(0, dim(new_sig_split)[1], dim(new_sig_split)[2])
for(k in 1:dim(new_sig_split)[2]){
temp <- as.factor(new_sig_split[,k])
mat[,k] <- as.numeric(as.matrix(plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1))))
}
mat
mat[,3]
mat[,1]
mat <- matrix(0, dim(new_sig_split)[1], dim(new_sig_split)[2])
for(k in 1:dim(new_sig_split)[2]){
temp <- as.factor(new_sig_split[,k])
print(levels(temp))
mat[,k] <- as.numeric(as.matrix(plyr::mapvalues(temp, from = levels(temp), to = 0:(length(levels(temp))-1))))
}
source('~/Documents/maptpx/R/tpx.R')
source('~/Documents/maptpx/R/topics.R')
source('~/Documents/maptpx/R/count.R')
source('~/Documents/maptpx/R/count.R')
topic_clus <- topics(filtered_counts, K=3, type="independent", signatures = signatures)
library(slam)
topic_clus <- topics(filtered_counts, K=3, type="independent", signatures = signatures)
source('~/Documents/maptpx/R/topics.R')
topic_clus <- topics(filtered_counts, K=3, type="independent", signatures = signatures)
signatures <- mat;
topic_clus <- topics(filtered_counts, K=3, type="independent", signatures = signatures)
library(maptpx)
source('~/Documents/maptpx/R/topics.R')
source('~/Documents/maptpx/R/tpx.R')
source('~/Documents/maptpx/R/count.R')
topic_clus <- topics(filtered_counts, K=3, type="independent", signatures = signatures)
topic_clus <- topics(filtered_counts, K=3, type="independent", signatures = signatures)
signatures
f_array
source('~/Documents/maptpx/R/tpx.R')
topic_clus <- topics(filtered_counts, K=3, type="independent", signatures = signatures)
topic_clus <- topics(filtered_counts, K=3, type="independent", signatures = signatures, tol=10)
topics_clus <- topic_clus
omega <- topics_clus$omega
annotation <- data.frame(
sample_id = paste0("X", c(1:NROW(omega))),
tissue_label = factor(labs)
)
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Moderns vs Ancients",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],": pmsignature: withput position information"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
signature_set <- colnames(filtered_counts)
labs <- character();
labs <- rep("ancient", dim(clubbed_counts)[1])
labs[control_indices] <- "controls"
annotation <- data.frame(
sample_id = paste0("X", c(1:NROW(omega))),
tissue_label = factor(labs)
)
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Moderns vs Ancients",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],": pmsignature: withput position information"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
names <- rownames(clubbed_counts_xx);
control_indices <- c(grep("EXN", names), grep("Libneg", names), grep("PCRneg", names))
labs <- character();
labs <- rep("ancient", dim(clubbed_counts)[1])
labs[control_indices] <- "controls"
annotation <- data.frame(
sample_id = paste0("X", c(1:NROW(omega))),
tissue_label = factor(labs)
)
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Moderns vs Ancients",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],": pmsignature: withput position information"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
signature_set <- colnames(filtered_counts)
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Moderns vs Ancients",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],": pmsignature: withput position information"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
omega
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Moderns vs Ancients",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],": pmsignature: withput position information"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Moderns vs Ancients",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],": pmsignature: withput position information"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Moderns vs Ancients",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],": pmsignature: withput position information"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
par(mfrow=c(1,1))
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Moderns vs Ancients",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],": pmsignature: withput position information"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
par(mfrow=c(1,1))
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Moderns vs Ancients",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],": pmsignature: withput position information"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
save(topics_clus, file="../rda/topicmodel_independent_K_3.rda")
save(topics_clus, file="../rda/topicmodel_independent_K_3.rda")
topics_clus <-  get(load("../rda/topicmodel_independent_K_3.rda"))
omega <- topics_clus$omega
names <- rownames(clubbed_counts_xx);
control_indices <- c(grep("EXN", names), grep("Libneg", names), grep("PCRneg", names))
labs <- character();
labs <- rep("ancient", dim(clubbed_counts)[1])
labs[control_indices] <- "controls"
annotation <- data.frame(
sample_id = paste0("X", c(1:NROW(omega))),
tissue_label = factor(labs)
)
par(mfrow=c(1,1))
CountClust::StructureGGplot(omega = omega,
annotation = annotation,
palette = RColorBrewer::brewer.pal(8, "Accent"),
yaxis_label = "Moderns vs Ancients",
order_sample = FALSE,
figure_title = paste0("StructurePlot: K=", dim(omega)[2],": pmsignature: independence"),
axis_tick = list(axis_ticks_length = .1,
axis_ticks_lwd_y = .1,
axis_ticks_lwd_x = .1,
axis_label_size = 7,
axis_label_face = "bold"))
